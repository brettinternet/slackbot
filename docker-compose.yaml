---
x-options: &options
  tty: true
  networks: [default]
  environment: &environment
    TZ: ${TIMEZONE:-America/Denver}
  deploy:
    restart_policy:
      condition: unless-stopped
  env_file: [.env]

name: slackbot

services:
  slackbot:
    <<: *options
    container_name: slackbot
    build:
      context: ./
      dockerfile: ./docker/bot/dev.Dockerfile
    environment:
      <<: *environment
      SERVER_PORT: 4200
      FEATURES: obituary
      ENVIRONMENT: development
      DATA_DIR: /app/data
    volumes: [./docker/bot/data:/app/data]
    ports: [4200:4200]
    labels:
      traefik.enable: true
      traefik.http.routers.client.rule: Host(`bot.${DOMAIN}`)
      traefik.http.routers.client.service: client-service
      traefik.http.routers.client.entrypoints: web
      traefik.http.services.client-service.loadbalancer.server.port: 4200

  traefik:
    <<: *options
    image: traefik:v3.3
    container_name: traefik
    environment:
      <<: *environment
      CF_DNS_API_TOKEN: ${CLOUDFLARE_API_TOKEN:?err}
      CLOUDFLARE_POLLING_INTERVAL: 10
      CLOUDFLARE_PROPAGATION_TIMEOUT: 300
    command:
      - --log.level=INFO
      - --accesslog.filepath=/var/log/access.log
      - --accesslog.filters.statuscodes=400-499
      - --api=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.forwardedHeaders.insecure=false
      - --entryPoints.websecure.forwardedHeaders.trustedIPs=${DOCKER_SUBNET}
      - --entrypoints.websecure.http.tls.certResolver=leresolver
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}
      - --certificatesresolvers.leresolver.acme.dnschallenge=true
      - --certificatesresolvers.leresolver.acme.dnschallenge.disablepropagationcheck=true # for internal domain
      - --certificatesresolvers.leresolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.leresolver.acme.dnschallenge.resolvers=1.1.1.1:53
      - --certificatesresolvers.leresolver.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.leresolver.acme.email=${ACME_EMAIL}
      - --serverstransport.insecureskipverify=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.tls.option.default.alpnProtocols: http/1.1,h2,dot

  cloudflared-tunnel:
    <<: *options
    image: cloudflare/cloudflared:2025.5.0
    container_name: cloudflared-tunnel
    environment:
      <<: *environment
      NO_AUTOUPDATE: "true"
      NO_TLS_VERIFY: "true"
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN:?err}
      TUNNEL_URL: https://traefik
      TUNNEL_ID: ${CLOUDFLARE_TUNNEL_ID}
    command: [tunnel, run]

  cloudflare-companion:
    <<: *options
    image: tiredofit/traefik-cloudflare-companion:latest
    container_name: cloudflare-companion
    volumes: [/var/run/docker.sock:/var/run/docker.sock:ro]
    environment:
      <<: *environment
      TIMEZONE: ${TIMEZONE}
      TRAEFIK_VERSION: 2
      CF_TOKEN: ${CLOUDFLARE_API_TOKEN:?err}
      TARGET_DOMAIN: tunnel.${DOMAIN}
      DOMAIN1: ${DOMAIN}
      DOMAIN1_ZONE_ID: ${CLOUDFLARE_PUBLIC_DOMAIN_ZONE_ID}
      DOMAIN1_PROXIED: "true"
      DOMAIN1_EXCLUDED_SUB_DOMAINS: "*.internal.${DOMAIN}"
      ENABLE_ZABBIX: "false"
