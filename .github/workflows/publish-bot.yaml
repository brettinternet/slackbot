---
name: Build and publish bot image

on:
  push:
    branches: [main]
    paths:
      - bot/**
      - cmd/bot/**
      - docker/bot/prod.Dockerfile
      - .github/workflows/publish-bot.yaml

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REPO: brettinternet/slackbot
  IMAGE_NAME: slackbot
  DESCRIPTION: A Slack bot
  DOCKERFILE: ./docker/bot/prod.Dockerfile

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skipci')"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
          flavor: latest=auto
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
            type=sha
          labels: |
            org.opencontainers.image.name=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=https://github.com/${{ env.REPO }}/tree/main/${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=${{ env.DESCRIPTION }}
            org.opencontainers.image.licenses=MIT

      - name: Set build version & time
        run: |
          echo "BUILD_VERSION=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "BUILD_TIME=${{ github.event.repository.updated_at }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE}}
          # Multi-platform only for main branch, single platform for dev speed
          platforms: ${{ github.ref == 'refs/heads/main' && 'arm64,amd64' || 'amd64' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |-
            BUILD_VERSION=${{ env.BUILD_VERSION }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            BUILD_ENVIRONMENT=production
